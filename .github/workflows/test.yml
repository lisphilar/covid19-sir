name: Quality Check

on:
  push:
    paths:
      - ".github/workflows/**"
      - "./covsirphy"
      - "./pyproject.toml"
  pull_request:
    types: [edited, synchronize, opened, reopened]

jobs:
  cancel:
    name: cancel previous runs
    runs-on: ubuntu-latest

    steps:
      - uses: styfle/cancel-workflow-action@0.10.0
        with:
          all_but_latest: true
          access_token: ${{ github.token }}

  poetry-test:
    name: quality check and pytest with Poetry
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - name: check out repository
        uses: actions/checkout@v3

      - name: set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: load cached venv if available
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: install dependencies and test tools if cache does not exist
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with test

      - name: run quality check with "make test" command
        run: make test

      - name: upload test coverage to Codecov
        uses: codecov/codecov-action@v3

  pip-test:
    name: test with pip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: pip install and test
      run: |
        pip install pip --upgrade
        pip install .
        pip install pytest pytest-cov pytest-xdist
        pytest -v --maxfail=1 tests -n auto

  pip-test-v3-10:
    name: test with pip and dev version of datatable
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: pip install and test
      run: |
        pip install pip --upgrade
        pip install git+https://github.com/h2oai/datatable.git
        pip install .
        pip install pytest pytest-cov pytest-xdist
        pytest -v --maxfail=1 tests -n auto

  anaconda_pip:
    name: test with Anaconda environment
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["windows-latest"]
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: anaconda, conda-forge

      - name: installation of CovsirPhy
        run: |
          conda install -c conda-forge pip fiona ruptures
          pip install .

  codeql:
    name: discover vulnerabilities with CodeQL
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: python

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
